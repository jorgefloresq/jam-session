package JamSessionAutomate;


import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Image;
import java.io.File;
import java.net.URL;
import java.util.ArrayList;
import java.util.Timer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JRadioButton;


public class JamFrame extends javax.swing.JFrame {
    //Timer is assigned and selected every time you press play
    private Timer timer;
    //Creates a list of booleans that represent which instrumentTracks will be playing
    private ArrayList<Boolean> chkbxsSelected = new ArrayList<Boolean>();
    private ArrayList<JRadioButton> rbs = new ArrayList<JRadioButton>();
    private ArrayList<InstrumentTrack> tracks = new ArrayList<InstrumentTrack>();
    private ArrayList<JLabel> labels = new ArrayList<JLabel>();
    private ArrayList<ImageIcon> icons = new ArrayList<ImageIcon>();
    
    String chord1;
    String chord2;
    String chord3;
    String chord4;
    String chord5;
    
    InstrumentTrack drumTrack;
    InstrumentTrack bassTrack;
    InstrumentTrack guitarTrack;
    InstrumentTrack keysTrack;
    
   
    public JamFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**r
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cmbChord1 = new javax.swing.JComboBox<>();
        cmbChord2 = new javax.swing.JComboBox<>();
        cmbChord3 = new javax.swing.JComboBox<>();
        cmbChord4 = new javax.swing.JComboBox<>();
        cmbChord5 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        rbDrums = new javax.swing.JRadioButton();
        rbBass = new javax.swing.JRadioButton();
        rbGuitar = new javax.swing.JRadioButton();
        rbKeys = new javax.swing.JRadioButton();
        lblGuitarGif = new javax.swing.JLabel();
        cmbbxDrums = new javax.swing.JComboBox<>();
        lblDrumsGif = new javax.swing.JLabel();
        cmbbxGuitar = new javax.swing.JComboBox<>();
        lblBassGif = new javax.swing.JLabel();
        cmbbxBass = new javax.swing.JComboBox<>();
        lblKeysGif = new javax.swing.JLabel();
        cmbbxKeys = new javax.swing.JComboBox<>();
        tglPlay = new javax.swing.JToggleButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusable(false);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Jam Session");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Chords"));

        cmbChord1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C Major", "C# Major", "D Major", "D# Major", "E Major", "F Major", "F# Major", "G Major", "G# Major", "A Major", "A# Major", "B Major", "C Minor", "C# Minor", "D Minor", "D# Minor", "E Minor", "F Minor", "F# Minor", "G Minor", "G# Minor", "A Minor", "A# Minor", "B Minor" }));

        cmbChord2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C Major", "C# Major", "D Major", "D# Major", "E Major", "F Major", "F# Major", "G Major", "G# Major", "A Major", "A# Major", "B Major", "C Minor", "C# Minor", "D Minor", "D# Minor", "E Minor", "F Minor", "F# Minor", "G Minor", "G# Minor", "A Minor", "A# Minor", "B Minor" }));
        cmbChord2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbChord2ActionPerformed(evt);
            }
        });

        cmbChord3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C Major", "C# Major", "D Major", "D# Major", "E Major", "F Major", "F# Major", "G Major", "G# Major", "A Major", "A# Major", "B Major", "C Minor", "C# Minor", "D Minor", "D# Minor", "E Minor", "F Minor", "F# Minor", "G Minor", "G# Minor", "A Minor", "A# Minor", "B Minor" }));
        cmbChord3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbChord3ActionPerformed(evt);
            }
        });

        cmbChord4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C Major", "C# Major", "D Major", "D# Major", "E Major", "F Major", "F# Major", "G Major", "G# Major", "A Major", "A# Major", "B Major", "C Minor", "C# Minor", "D Minor", "D# Minor", "E Minor", "F Minor", "F# Minor", "G Minor", "G# Minor", "A Minor", "A# Minor", "B Minor" }));
        cmbChord4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbChord4ActionPerformed(evt);
            }
        });

        cmbChord5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C Major", "C# Major", "D Major", "D# Major", "E Major", "F Major", "F# Major", "G Major", "G# Major", "A Major", "A# Major", "B Major", "C Minor", "C# Minor", "D Minor", "D# Minor", "E Minor", "F Minor", "F# Minor", "G Minor", "G# Minor", "A Minor", "A# Minor", "B Minor" }));
        cmbChord5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbChord5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(cmbChord1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbChord2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbChord3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbChord4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbChord5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbChord1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbChord2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbChord3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbChord4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbChord5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Instruments"));

        rbDrums.setSelected(true);
        rbDrums.setText("Drums");
        rbDrums.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbDrumsStateChanged(evt);
            }
        });
        rbDrums.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDrumsActionPerformed(evt);
            }
        });

        rbBass.setText("Bass");
        rbBass.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbBassStateChanged(evt);
            }
        });

        rbGuitar.setText("Guitar");
        rbGuitar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbGuitarStateChanged(evt);
            }
        });

        rbKeys.setText("Keys");
        rbKeys.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbKeysStateChanged(evt);
            }
        });
        rbKeys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbKeysActionPerformed(evt);
            }
        });

        lblGuitarGif.setBackground(new java.awt.Color(0, 0, 0));
        lblGuitarGif.setOpaque(true);

        cmbbxDrums.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbbxDrumsItemStateChanged(evt);
            }
        });
        cmbbxDrums.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbbxDrumsActionPerformed(evt);
            }
        });

        lblDrumsGif.setBackground(new java.awt.Color(0, 0, 0));
        lblDrumsGif.setOpaque(true);

        lblBassGif.setBackground(new java.awt.Color(0, 0, 0));
        lblBassGif.setOpaque(true);

        lblKeysGif.setBackground(new java.awt.Color(0, 0, 0));
        lblKeysGif.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(rbDrums)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbBass)
                .addGap(88, 88, 88))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblDrumsGif, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(lblBassGif, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblGuitarGif, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblKeysGif, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(rbGuitar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rbKeys)
                                .addGap(32, 32, 32))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cmbbxDrums, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbbxGuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)))))
                .addGap(52, 52, 52))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(cmbbxBass, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmbbxKeys, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbDrums)
                    .addComponent(rbBass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDrumsGif, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBassGif, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbbxDrums, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbbxGuitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbGuitar)
                    .addComponent(rbKeys))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblGuitarGif, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKeysGif, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbbxBass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbbxKeys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        tglPlay.setText("Play");
        tglPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglPlayActionPerformed(evt);
            }
        });

        btn1.setText("1");
        btn1.setEnabled(false);
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("2");
        btn2.setEnabled(false);
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText("3");
        btn3.setEnabled(false);
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setText("4");
        btn4.setEnabled(false);
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setText("5");
        btn5.setEnabled(false);
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 335, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBack)
                                    .addComponent(tglPlay))
                                .addGap(34, 34, 34))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addComponent(btn1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn5)
                .addGap(29, 29, 29)
                .addComponent(tglPlay)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Backend.connectDB();
        try{
        URL urlDrums = new URL("file:Gifs/drums.gif");
        URL urlBass = new URL("file:Gifs/bass.gif");
        URL urlGuitar = new URL("file:Gifs/guitar.gif");
        URL urlKeyz = new URL("file:Gifs/keyz.gif");
        
        ImageIcon iconDrums = new ImageIcon(urlDrums);
        iconDrums.setDescription("This is a drums icon");
        ImageIcon iconBass = new ImageIcon(urlBass);
        iconBass.setDescription("This is a Bass icon");
        ImageIcon iconGuitar = new ImageIcon(urlGuitar);
        iconGuitar.setDescription("This is a Guitar icon");
        ImageIcon iconKeyz = new ImageIcon(urlKeyz);
        iconKeyz.setDescription("This is a Keyz icon");
        
        icons.add(iconDrums);
        icons.add(iconBass);
        icons.add(iconGuitar);
        icons.add(iconKeyz);
        
        
        }
        catch(Exception e){
        e.printStackTrace();
        }
      
        
        //Loads directories of Instruments into comboboxes
        File drumsFile = new File("Audio/drums");
        addDirectories(drumsFile,cmbbxDrums);
        
        File bassFile = new File("Audio/bass");
        addDirectories(bassFile,cmbbxBass);
        
        File guitarFile = new File("Audio/guitar");
        addDirectories(guitarFile,cmbbxGuitar);
        
        File keysFile = new File("Audio/keyz");
        addDirectories(keysFile,cmbbxKeys);
        
        
        //Create the instrument tracks that will be used
            drumTrack = new InstrumentTrack("drums",Backend.getDrumVariationPath((String)cmbbxDrums.getSelectedItem(),"start"),
                            (String)cmbbxDrums.getSelectedItem()
                            ,"start");
            bassTrack = new InstrumentTrack("bass",Backend.getChordPath("bass",(String)cmbbxBass.getSelectedItem(),
                             (String)cmbChord1.getSelectedItem())
                            ,(String)cmbbxBass.getSelectedItem(),(String)cmbChord1.getSelectedItem());
            guitarTrack = new InstrumentTrack("guitar",Backend.getChordPath("guitar",(String)cmbbxGuitar.getSelectedItem(),
                             (String)cmbChord1.getSelectedItem())
                            ,(String)cmbbxGuitar.getSelectedItem(),(String)cmbChord1.getSelectedItem());
            keysTrack = new InstrumentTrack("keys",Backend.getChordPath("keyz",(String)cmbbxKeys.getSelectedItem(),
                             (String)cmbChord1.getSelectedItem())
                            ,(String)cmbbxKeys.getSelectedItem(),(String)cmbChord1.getSelectedItem());
            
            System.out.println(drumTrack.getClipDuration());
            
            labels.add(lblDrumsGif);
            labels.add(lblBassGif);
            labels.add(lblGuitarGif);
            labels.add(lblKeysGif);
            

        
        
        
    }//GEN-LAST:event_formWindowOpened

    private void cmbChord2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbChord2ActionPerformed

    }//GEN-LAST:event_cmbChord2ActionPerformed

    private void tglPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglPlayActionPerformed
        
        if(!ClipSequencer.started){
            cmbChord1.setEnabled(false);
            cmbChord2.setEnabled(false);
            cmbChord3.setEnabled(false);
            cmbChord4.setEnabled(false);
            cmbChord5.setEnabled(false);
            cmbbxDrums.setEnabled(false);
            cmbbxGuitar.setEnabled(false);
            cmbbxBass.setEnabled(false);
            cmbbxKeys.setEnabled(false);
            
            btn1.setEnabled(true);
            btn2.setEnabled(true);
            btn3.setEnabled(true);
            btn4.setEnabled(true);
            btn5.setEnabled(true);
            
            //Add default radiobutton objects to arraylist
            rbs.clear();
            rbs.add(rbDrums);
            rbs.add(rbBass);
            rbs.add(rbGuitar);
            rbs.add(rbKeys);
            
            
            //Sets the 5 chords that will be used(Stores in string)
            chord1 = (String)cmbChord1.getSelectedItem();
            chord2 = (String)cmbChord2.getSelectedItem();
            chord3 = (String)cmbChord3.getSelectedItem();
            chord4 = (String)cmbChord4.getSelectedItem();
            chord5 = (String)cmbChord5.getSelectedItem();
            
            //
            drumTrack.updatePath(Backend.getDrumVariationPath((String)cmbbxDrums.getSelectedItem(),"start"));
            
            
            
            tracks.clear();
            tracks.add(drumTrack);
            tracks.add(bassTrack);
            tracks.add(guitarTrack);
            tracks.add(keysTrack);
            
            
            
            
            //Add values to radiobutton boolean arraylist(not considering
            //additional radiobuttons added)\
             refreshSequence();
             
             
            
            timer = new Timer();
            ClipSequencer.started = true;
            
            ClipSequencer.updateSequence(chkbxsSelected);
            timer.schedule(new ClipSequencer(labels,icons,tracks,drumTrack.getClipDuration()-120),0,drumTrack.getClipDuration()-120);
        }
        else{
            cmbChord1.setEnabled(true);
            cmbChord2.setEnabled(true);
            cmbChord3.setEnabled(true);
            cmbChord4.setEnabled(true);
            cmbChord5.setEnabled(true);
            
            cmbbxDrums.setEnabled(true);
            cmbbxGuitar.setEnabled(true);
            cmbbxBass.setEnabled(true);
            cmbbxKeys.setEnabled(true);
            
            btn1.setEnabled(false);
            btn2.setEnabled(false);
            btn3.setEnabled(false);
            btn4.setEnabled(false);
            btn5.setEnabled(false);
            
            //ClipSequencer.incrementCount();
            ClipSequencer.started = false;
            ClipSequencer.stopAllClips();
            cancelTimer();
            
            
        }
    }//GEN-LAST:event_tglPlayActionPerformed
    public void cancelTimer(){
        timer.cancel();
    }
    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped

    }//GEN-LAST:event_formKeyTyped

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased

    }//GEN-LAST:event_formKeyReleased

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        bassTrack.updatePath(Backend.getChordPath("bass",(String)cmbbxBass.getSelectedItem(),
                             (String)cmbChord5.getSelectedItem()));
        guitarTrack.updatePath(Backend.getChordPath("guitar",(String)cmbbxGuitar.getSelectedItem(),
                             (String)cmbChord5.getSelectedItem()));
        keysTrack.updatePath(Backend.getChordPath("keyz",(String)cmbbxKeys.getSelectedItem(),
                             (String)cmbChord5.getSelectedItem()));
    }//GEN-LAST:event_btn5ActionPerformed

    private void cmbbxDrumsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbbxDrumsActionPerformed

    }//GEN-LAST:event_cmbbxDrumsActionPerformed

    private void cmbbxDrumsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbbxDrumsItemStateChanged

    }//GEN-LAST:event_cmbbxDrumsItemStateChanged

    private void rbKeysStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbKeysStateChanged
        refreshSequence();
    }//GEN-LAST:event_rbKeysStateChanged

    private void rbGuitarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbGuitarStateChanged
        refreshSequence();
    }//GEN-LAST:event_rbGuitarStateChanged

    private void rbBassStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbBassStateChanged
        refreshSequence();
    }//GEN-LAST:event_rbBassStateChanged

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        bassTrack.updatePath(Backend.getChordPath("bass",(String)cmbbxBass.getSelectedItem(),
                             (String)cmbChord1.getSelectedItem()));
        guitarTrack.updatePath(Backend.getChordPath("guitar",(String)cmbbxGuitar.getSelectedItem(),
                             (String)cmbChord1.getSelectedItem()));
        keysTrack.updatePath(Backend.getChordPath("keyz",(String)cmbbxKeys.getSelectedItem(),
                             (String)cmbChord1.getSelectedItem()));
    }//GEN-LAST:event_btn1ActionPerformed

    private void rbKeysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbKeysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbKeysActionPerformed

    private void cmbChord3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbChord3ActionPerformed
        
    }//GEN-LAST:event_cmbChord3ActionPerformed

    private void cmbChord4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbChord4ActionPerformed

    }//GEN-LAST:event_cmbChord4ActionPerformed

    private void cmbChord5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbChord5ActionPerformed
    
    }//GEN-LAST:event_cmbChord5ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        bassTrack.updatePath(Backend.getChordPath("bass",(String)cmbbxBass.getSelectedItem(),
                             (String)cmbChord2.getSelectedItem()));
        guitarTrack.updatePath(Backend.getChordPath("guitar",(String)cmbbxGuitar.getSelectedItem(),
                             (String)cmbChord2.getSelectedItem()));
        keysTrack.updatePath(Backend.getChordPath("keyz",(String)cmbbxKeys.getSelectedItem(),
                             (String)cmbChord2.getSelectedItem()));
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        bassTrack.updatePath(Backend.getChordPath("bass",(String)cmbbxBass.getSelectedItem(),
                             (String)cmbChord4.getSelectedItem()));
        guitarTrack.updatePath(Backend.getChordPath("guitar",(String)cmbbxGuitar.getSelectedItem(),
                             (String)cmbChord4.getSelectedItem()));
        keysTrack.updatePath(Backend.getChordPath("keyz",(String)cmbbxKeys.getSelectedItem(),
                             (String)cmbChord4.getSelectedItem()));
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        bassTrack.updatePath(Backend.getChordPath("bass",(String)cmbbxBass.getSelectedItem(),
                             (String)cmbChord3.getSelectedItem()));
        guitarTrack.updatePath(Backend.getChordPath("guitar",(String)cmbbxGuitar.getSelectedItem(),
                             (String)cmbChord3.getSelectedItem()));
        keysTrack.updatePath(Backend.getChordPath("keyz",(String)cmbbxKeys.getSelectedItem(),
                             (String)cmbChord3.getSelectedItem()));
    }//GEN-LAST:event_btn3ActionPerformed

    private void rbDrumsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDrumsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbDrumsActionPerformed

    private void rbDrumsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbDrumsStateChanged
        refreshSequence();
    }//GEN-LAST:event_rbDrumsStateChanged

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
        new MenuFrame().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JamFrame().setVisible(true);
            }
        });
    }
    public static void addDirectories(File file, JComboBox j){
        j.removeAllItems();
        for(String s:file.list()){
            j.addItem(s);
        }
    }
    private void refreshSequence(){
        chkbxsSelected.clear();
        checkCheckboxes();
        ClipSequencer.updateSequence(chkbxsSelected);
    }
    private void checkCheckboxes(){
        
        for(int i =0;i<rbs.size();i++){
                 chkbxsSelected.add(rbs.get(i).isSelected());
             }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> cmbChord1;
    private javax.swing.JComboBox<String> cmbChord2;
    private javax.swing.JComboBox<String> cmbChord3;
    private javax.swing.JComboBox<String> cmbChord4;
    private javax.swing.JComboBox<String> cmbChord5;
    private javax.swing.JComboBox<String> cmbbxBass;
    private javax.swing.JComboBox<String> cmbbxDrums;
    private javax.swing.JComboBox<String> cmbbxGuitar;
    private javax.swing.JComboBox<String> cmbbxKeys;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblBassGif;
    private javax.swing.JLabel lblDrumsGif;
    private javax.swing.JLabel lblGuitarGif;
    private javax.swing.JLabel lblKeysGif;
    private javax.swing.JRadioButton rbBass;
    private javax.swing.JRadioButton rbDrums;
    private javax.swing.JRadioButton rbGuitar;
    private javax.swing.JRadioButton rbKeys;
    private javax.swing.JToggleButton tglPlay;
    // End of variables declaration//GEN-END:variables
}
